{"version":3,"file":"component---src-app-templates-post-template-post-layout-ui-tsx-content-file-path-posts-블로그-리팩토링-하면서-고려한-것들-md-d59471b9c84057cb5134.js","mappings":"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","sources":["webpack://kyoungah-dev-blog/./posts/블로그-리팩토링-하면서-고려한-것들.md","webpack://kyoungah-dev-blog/./src/app/templates/post-template/post-layout.ui.tsx","webpack://kyoungah-dev-blog/./src/app/templates/post-template/components/post-layout-content/post-layout.content.module.css","webpack://kyoungah-dev-blog/./src/app/templates/post-template/components/post-layout-content/post-layout-content.ui.tsx","webpack://kyoungah-dev-blog/./src/app/templates/post-template/components/post-layout-date/post-layout-date.module.css","webpack://kyoungah-dev-blog/./src/app/templates/post-template/components/post-layout-date/post-layout-date.tsx","webpack://kyoungah-dev-blog/./src/app/templates/post-template/components/post-layout-tags/post-layout.module.css","webpack://kyoungah-dev-blog/./src/app/templates/post-template/components/post-layout-tags/post-layout-tags.ui.tsx","webpack://kyoungah-dev-blog/./src/app/templates/post-template/components/post-layout-title/post-layout-title.module.css","webpack://kyoungah-dev-blog/./src/app/templates/post-template/components/post-layout-title/post-layout-title.ui.tsx","webpack://kyoungah-dev-blog/./src/entities/tags/index.ts","webpack://kyoungah-dev-blog/./src/entities/tags/tags.ui.tsx","webpack://kyoungah-dev-blog/./src/entities/tags/tags.module.css","webpack://kyoungah-dev-blog/./src/shared/uis/tag/tag.ui.tsx","webpack://kyoungah-dev-blog/./src/shared/uis/tag/tag.module.css","webpack://kyoungah-dev-blog/./src/shared/uis/container/container.module.css","webpack://kyoungah-dev-blog/./src/shared/uis/container/container.ui.tsx","webpack://kyoungah-dev-blog/./src/widgets/basic-layout/basic-layout.module.css","webpack://kyoungah-dev-blog/./src/widgets/basic-layout/basic-layout.ui.tsx","webpack://kyoungah-dev-blog/./src/widgets/header/header.module.css","webpack://kyoungah-dev-blog/./src/widgets/header/header.ui.tsx","webpack://kyoungah-dev-blog/./src/widgets/footer/footer.module.css","webpack://kyoungah-dev-blog/./src/widgets/footer/footer.ui.tsx","webpack://kyoungah-dev-blog/./src/widgets/default-layout/default-layout.ui.tsx","webpack://kyoungah-dev-blog/./src/app/templates/post-template/post-layout.module.css","webpack://kyoungah-dev-blog/./node_modules/@mdx-js/react/lib/index.js","webpack://kyoungah-dev-blog/./node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"블로그 리팩토링을 시작한 후, 마침내 어느 정도 리팩토링을 마무리 했다.\\n결과물은 간단해 보이지만 리팩토링을 진행하면서 나름 이리저리 고민을 많이 했던지라 어떤 부분들을 고민했고 어떻게 새로운 결과물에 반영했는지에 대해 정리해보고자 한다.\"), \"\\n\", React.createElement(_components.h2, null, \"개발 환경\"), \"\\n\", React.createElement(_components.h3, null, \"JAM Stack\"), \"\\n\", React.createElement(_components.p, null, \"JAM Stack 및 정적 호스팅을 알고 난 이후로 개발 블로그는 쭈욱 JAM Stack을 고집하고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"JAM에서 JAM이란 Javascript, Api, Markup의 약자이다. HTML 파일로 이루어진 Markup을 사용하여 웹 페이지의 기본 구조를 정의하고 CSS를 통해 스타일링한다. 그런 다음 JavaScript를 사용하여 클라이언트 측에서 동적 기능을 처리하고, 필요한 데이터를 외부 API에서 가져와 렌더링한다.\"), \"\\n\", React.createElement(_components.p, null, \"JAM Stack을 지원하는 프레임워크를 사용하면 내 입맛대로 커스터마이징은 물론 프론트 지식만으로도 간단하게 개발 블로그를 구축할 수 있다. Github Page에 정적 호스팅으로 배포해버리면 서버 비용 한 푼 들지않고도 블로그를 운영할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"직접 데이터베이스 및 인프라를 구축하여 기술 블로그를 운영해보는게 더 낫지 않겠냐는 의견도 들었었는데 언제 또 방치될지 모르는 개발 블로그에 많은 비용을 투자하는게 옳은 선택은 아닌 것 같다. 기술 블로그를 꾸준히 운영하고 해당 블로그가 커져서 좀 더 복잡한 기능들이 추가된다면 모르겠는데 지금 당장은 JAM Stack 및 정적 호스팅 만으로도 충분하다고 생각한다.\"), \"\\n\", React.createElement(_components.h4, null, \"Gatsby\"), \"\\n\", React.createElement(_components.p, null, \"JAM Stack 프레임워크로는 Gatsby를 선택했다. 2버전대부터 잘 쓰고 있었는데 어느덧 5버전대까지 나왔길래 이번에 리팩토링을 진행하면서 Gatsby 5버전대로 마이그레이션도 같이 진행했다.\"), \"\\n\", React.createElement(_components.p, null, \"사실 리팩토링을 한창 진행하던 도중에 왜 낡은 기술(?)인 Gatsby를 선택했냐는 얘기도 들었고 \", React.createElement(_components.a, {\n    href: \"https://astro.build/\"\n  }, \"Astro\"), \"도 흥미롭게 다가와서 지금이라도 Astro로 마이그레이션 할까? 하고 고민을 하긴 했는데 이미 얼추 만들어진 블로그에 FSD 아키텍처를 도입해보고자 한번 다시 뒤엎은 상태였던지라 Astro로 또 마이그레이션을 진행하다간 영원히 블로그 리팩토링을 완료하지 못할 것 같았다.\"), \"\\n\", React.createElement(_components.p, null, \"게다가 Gatsby 역시 여전히 꾸준한 업데이트가 이루어지고 있고, 다양한 플러그인과 레퍼런스 등을 통해 풍부한 개발 생태계를 갖추고 있어 2024년 기준으로도 충분히 매력적인 선택지라 생각한다. 추후에 Gatsby가 deprecated되거나 더 이상 업데이트가 이루어지지 않을 때 Astro나 다른 라이브러리로 갈아타도 좋을것 같다.\"), \"\\n\", React.createElement(_components.h3, null, \"CSS\"), \"\\n\", React.createElement(_components.h4, null, \"PostCSS\"), \"\\n\", React.createElement(_components.p, null, \"컴포넌트 스타일링은 css-in-js에서 벗어나 css 후처리기인 PostCSS를 선택했다.\"), \"\\n\", React.createElement(_components.p, null, \"Styled Components, Emotion 등 css-in-js 라이브러리에 너무 익숙해져 있어서 오랜만에 순수하게 css 작업을 해보고 싶기도 했고 리액트 서버 컴포넌트와 Next.js App Router가 등장하면서 css-in-js의 매력이 많이 떨어질 것이라고 판단되었기 때문이다.\"), \"\\n\", React.createElement(_components.p, null, \"그리고 css-in-js는 JavaScript에서 스타일을 생성하고 삽입하는 방식으로 동작하기 때문에 CSS 파일을 생성하는 과정이 추가되어 빌드 시간이 증가할 수 있다. SSG 특성상 포스트 목록이 늘어가면 분명 빌드 시간이 늘어날텐데 css-in-js까지 빌드 시간에 영향을 줄 것 같았다.\"), \"\\n\", React.createElement(_components.p, null, \"Sass 대신 PostCSS를 선택한 이유는 Sass에 안쓰는 기능들까지 안고 가고 싶진 않았기 때문에 Sass에서 자주 쓰는 기능들만 뽑은 뒤에 PostCss로 얼추 흉내낼 수 있게끔 커스터마이징 했다.\"), \"\\n\", React.createElement(_components.p, null, \"사실 개인적으로 테일윈드를 좋아하는 편이 아니라서 PostCSS를 선택한 이유도 있긴한데 블로그 리팩토링이 얼추 완료된 지금 다시 생각해보니 테일윈드를 선택했어도 좋았을것 같다. 테일윈드를 써 본 경험이 없음에도 불구하고 클래스명이 지저분해진다는 이유 하나 때문에 안쓰고 있었는데 이번 기회에 한번 써보면서 테일윈드의 장단점을 직접 판단하는게 더 좋았을 것 같다.\\n다음에 또 다른 사이드 프로젝트를 진행할 일이 있을 땐 꼭 테일윈드를 써봐야겠다.\"), \"\\n\", React.createElement(_components.h4, null, \"CSS 변수합성\"), \"\\n\", React.createElement(_components.p, null, \"예전에 primary 컬러를 정의하고 이 primary 컬러를 rgba로 바꿔 투명도를 조정하는 방법을 찾다가 \", React.createElement(_components.a, {\n    href: \"https://ui.toast.com/posts/ko_20210402\"\n  }, \"CSS 변수 합성의 강력함\"), \"이라는 포스팅을 발견했었는데 정말 흥미롭게 읽었던 경험이 있었다.\\n해당 내용을 기억하고 있다가 이번 블로그 리팩토링때 같이 적용해봤는데 나쁘지 않은 선택이었다고 생각한다.\"), \"\\n\", React.createElement(_components.p, null, \"다만 실무에서는 잘 사용할 수 있을지 모르겠다. 디자이너분들이 작성해주신 색상 팔레트 컬러값을 확인해보면 같은 파란색이라도 채도에 따라 베이스 컬러가 다른 경우가 많아서 지금 블로그에 적용한 것처럼 간편하게 변수합성으로 색상 팔레트를 정의하기엔 쉽지 않을 것 같다. 색상 팔레트의 각각 컬러들의 베이스컬러를 저장해놓고 필요한곳 마다 갖다 쓸 수는 있을 것 같은데 유지보수가 어려워지지 않을까 싶기도 하고... CSS변수합성을 실무에 어떻게 잘 녹여낼 수 있을지는 조금 더 고민해봐야겠다.\"), \"\\n\", React.createElement(_components.h2, null, \"FSD 아키텍처\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://emewjin.github.io/feature-sliced-design/\"\n  }, \"(번역) 기능 분할 설계 - 최고의 프런트엔드 아키텍처\"), \" 포스팅을 읽고 FSD 아키텍처도 한번 도입해보았다. 개발 블로그가 작은 사이즈의 프로젝트다 보니 아직까지는 FSD 아키텍처의 장점은 잘 느낄 수 없어서 아쉬웠다. 그리고 entities 레이어의 기준이 너무 헷갈린다. FSD 아키텍처 예제 레파지토리를 몇개 찾아봤는데 댓글 api 에서 댓글 목록을 가지고와서 화면에 출력해주는 컴포넌트가 entities 레이어에 포함되어 있었고 해당 댓글 api는 하드코딩으로 박혀있었다. 그런데 댓글 목록 api를 그 api만 쓸거라는 보장이 없지 않은가? 나같은 경우에는 포스트 목록 컴포넌트가 메인 페이지에서도 쓰이고 태그 검색 페이지에서도 쓰일건데 api는 각각 다른 api를 쓸 예정이다. 이렇게 하면 entities 레이어엔 포스트 목록 컴포넌트가 두개가 생기는건가? FSD 아키텍처에 대해서는 좀 더 공부해봐야겠다.\"), \"\\n\", React.createElement(_components.h2, null, \"UI / UX\"), \"\\n\", React.createElement(_components.p, null, \"포스트 기준의 개발 블로그다 보니 가독성이 중요하다 생각해서 복잡한 UI는 다 뺐고 글에 집중할 수 있게 최대한 심플하게 만들었다.\"), \"\\n\", React.createElement(_components.p, null, \"개인적으로 모바일이나 데스크톱으로 글을 읽을 땐 이상하게 글이 잘 안읽히는 편이다. 그나마 폰트 사이즈가 크면 수월하게 잘 읽혔던 경험이 있어서 일부러 게시글의 폰트 크기를 크게 잡았다.\"), \"\\n\", React.createElement(_components.h2, null, \"남은 작업들\"), \"\\n\", React.createElement(_components.p, null, \"우선순위가 높은 순서대로 작성했다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"SEO 최적화\"), \"\\n\", React.createElement(_components.li, null, \"태그 페이지\"), \"\\n\", React.createElement(_components.li, null, \"댓글 기능\"), \"\\n\", React.createElement(_components.li, null, \"dark mode 적용\"), \"\\n\", React.createElement(_components.li, null, \"CI / CD 설정\"), \"\\n\", React.createElement(_components.li, null, \"이전 개발 블로그에 있는 포스팅들 마이그레이션\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"마무리\"), \"\\n\", React.createElement(_components.p, null, \"오랜만에 쓰는 글인데 역시 개발보다 글 쓰는게 더 어렵다. 남은 작업들도 후딱 끝내고 양질의 글도 꾸준히 써서 남부끄럽지 않은 멋진 개발블로그를 만들고 싶다.\"), \"\\n\", React.createElement(_components.h2, null, \"Reference\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://emewjin.github.io/feature-sliced-design/\"\n  }, \"(번역) 기능 분할 설계 - 최고의 프런트엔드 아키텍처\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/sldk-yuri/realworld-react-fsd/tree/master/src/app\"\n  }, \"realworld-react-fsd\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://ui.toast.com/posts/ko_20210402\"\n  }, \"CSS 변수 합성의 강력함\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/yookyoung.park/Workspace/kyoungah-dev-blog/posts/블로그-리팩토링-하면서-고려한-것들.md\";\nimport {MDXProvider} from '@mdx-js/react';\nimport {Container} from '@/shared/uis/container';\nimport {DefaultLayout} from '@/widgets/default-layout';\nimport {PostLayoutContent} from './components/post-layout-content';\nimport {PostLayoutDate} from './components/post-layout-date';\nimport {PostLayoutTags} from './components/post-layout-tags';\nimport {PostLayoutTitle} from './components/post-layout-title';\nimport {postLayoutContainer, postLayoutTitle} from './post-layout.module.css';\nimport {jsx as _jsx} from \"react/jsx-runtime\";\nimport {jsxs as _jsxs} from \"react/jsx-runtime\";\nfunction PostLayout(_ref) {\n  var _data$mdx$frontmatter, _data$mdx;\n  let {data, children} = _ref;\n  const {date, tags, title} = (_data$mdx$frontmatter = data === null || data === void 0 ? void 0 : (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : _data$mdx.frontmatter) !== null && _data$mdx$frontmatter !== void 0 ? _data$mdx$frontmatter : {};\n  return _jsx(DefaultLayout, {\n    children: _jsxs(Container, {\n      className: postLayoutContainer,\n      children: [_jsx(PostLayoutTitle, {\n        className: postLayoutTitle,\n        title: title\n      }), _jsx(PostLayoutDate, {\n        date: date\n      }), _jsx(PostLayoutTags, {\n        tags: tags\n      }), _jsx(PostLayoutContent, {\n        children: _jsx(MDXProvider, {\n          children: children\n        })\n      })]\n    })\n  });\n}\nconst query = \"1347208223\";\nPostLayout\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostLayout, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var postLayoutContentRoot = \"post-layout-content-module--post-layout-content-root--01754\";","import { clsx } from \"clsx\";\nimport { type HTMLAttributes, type PropsWithChildren } from \"react\";\n\nimport { postLayoutContentRoot } from \"./post-layout.content.module.css\";\n\ntype Props = PropsWithChildren & HTMLAttributes<HTMLDivElement>;\n\nfunction PostLayoutContent({ children, className, ...props }: Props) {\n  return (\n    <div className={clsx(postLayoutContentRoot, className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport { PostLayoutContent };\n","// extracted by mini-css-extract-plugin\nexport var postLayoutDateRoot = \"post-layout-date-module--post-layout-date-root--f34d1\";","import { clsx } from \"clsx\";\nimport { type HTMLAttributes } from \"react\";\n\nimport { postLayoutDateRoot } from \"./post-layout-date.module.css\";\n\ntype Props = { date: string } & HTMLAttributes<HTMLHeadingElement>;\n\nfunction PostLayoutDate({ className, date, ...props }: Props) {\n  return (\n    <span className={clsx(postLayoutDateRoot, className)} {...props}>\n      {date}\n    </span>\n  );\n}\n\nexport { PostLayoutDate };\n","// extracted by mini-css-extract-plugin\nexport var postLayoutTags = \"post-layout-module--post-layout-tags--837df\";","import { Tags } from \"@/entities/tags\";\nimport { Link } from \"gatsby\";\n\nimport { postLayoutTags } from \"./post-layout.module.css\";\n\ntype Props = { tags: string[] };\n\nfunction PostLayoutTags({ tags }: Props) {\n  return (\n    <Tags className={postLayoutTags}>\n      {tags.map((tag) => (\n        <Link key={tag} to={`/tags/${tag}`}>\n          <Tags.Tag tag={tag} />\n        </Link>\n      ))}\n    </Tags>\n  );\n}\n\nexport { PostLayoutTags };\n","// extracted by mini-css-extract-plugin\nexport var postLayoutTitleRoot = \"post-layout-title-module--post-layout-title-root--88374\";","import { clsx } from \"clsx\";\nimport { postLayoutTitleRoot } from \"./post-layout-title.module.css\";\nimport { HTMLAttributes } from \"react\";\n\ntype Props = { title: string } & HTMLAttributes<HTMLHeadingElement>;\n\nfunction PostLayoutTitle({ className, title, ...props }: Props) {\n  return (\n    <h1 className={clsx(postLayoutTitleRoot, className)} {...props}>\n      {title}\n    </h1>\n  );\n}\n\nexport { PostLayoutTitle };\n","import { Tag } from '@/shared/uis/tag';\nimport { Tags } from './tags.ui';\n\nconst ComposedTags = Object.assign(Tags, {\n  Tag,\n});\n\nexport { ComposedTags as Tags };\n","import { PropsWithChildren, type HTMLAttributes } from 'react';\nimport { clsx } from 'clsx';\n\nimport { tagsRoot } from './tags.module.css';\n\ntype Props = PropsWithChildren & HTMLAttributes<HTMLDivElement>;\n\nfunction Tags({ children, className, ...props }: Props) {\n  return (\n    <div className={clsx(tagsRoot, className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport { Tags };\n","// extracted by mini-css-extract-plugin\nexport var show = \"tags-module--show--7704b\";\nexport var tagsRoot = \"tags-module--tags-root--e3461\";","import { clsx } from 'clsx';\n\nimport type { HTMLAttributes, ReactNode } from 'react';\n\nimport { tagRoot } from './tag.module.css';\n\ntype Props = {\n  tag: ReactNode;\n} & HTMLAttributes<HTMLSpanElement>;\n\nfunction Tag({ className, tag, ...props }: Props) {\n  return (\n    <span className={clsx(tagRoot, className)} {...props}>\n      {tag}\n    </span>\n  );\n}\n\nexport type { Props as TagProps };\nexport { Tag };\n","// extracted by mini-css-extract-plugin\nexport var tagRoot = \"tag-module--tag-root--aae01\";","// extracted by mini-css-extract-plugin\nexport var containerRoot = \"container-module--container-root--3b208\";","import { clsx } from 'clsx';\nimport type { PropsWithChildren, HTMLAttributes } from 'react';\n\nimport { containerRoot } from './container.module.css';\n\ntype Props = PropsWithChildren & HTMLAttributes<HTMLSpanElement>;\n\nfunction Container({ children, className, ...props }: Props) {\n  return (\n    <div className={clsx(containerRoot, className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport { Container };\n","// extracted by mini-css-extract-plugin\nexport var basicLayoutRoot = \"basic-layout-module--basic-layout-root--a11e0\";","import { clsx } from 'clsx';\nimport { type HTMLAttributes, type PropsWithChildren } from 'react';\n\nimport { basicLayoutRoot } from './basic-layout.module.css';\n\ntype Props = PropsWithChildren & HTMLAttributes<HTMLDivElement>;\n\nfunction BasicLayout({ children, className, ...props }: Props) {\n  return (\n    <div className={clsx(basicLayoutRoot, className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nexport { BasicLayout };\n","// extracted by mini-css-extract-plugin\nexport var about = \"header-module--about--32ac9\";\nexport var headerLogo = \"header-module--header-logo--5bbdc\";\nexport var headerNavigation = \"header-module--header-navigation--24bcb\";\nexport var headerNavigationItem = \"header-module--header-navigation-item--ba248\";\nexport var headerNavigationItemLink = \"header-module--header-navigation-item-link--d6da9\";\nexport var headerNavigationList = \"header-module--header-navigation-list--3815c\";\nexport var headerRoot = \"header-module--header-root--01ceb\";\nexport var tags = \"header-module--tags--eb332\";","import { Link } from 'gatsby';\nimport { clsx } from 'clsx';\n\nimport {\n  about,\n  headerRoot,\n  headerLogo,\n  headerNavigation,\n  headerNavigationList,\n  headerNavigationItem,\n  headerNavigationItemLink,\n  tags,\n} from './header.module.css';\n\nfunction Header() {\n  return (\n    <header className={headerRoot}>\n      <Link to=\"/\">\n        <img\n          src=\"/images/logo.png\"\n          srcSet={`/images/logo-small.png 200w, /images/logo.png 300w`}\n          sizes=\"(max-width: 360px) 200px, 300px\"\n          alt=\"dev.kyoungah.me\"\n          className={headerLogo}\n        />\n      </Link>\n      <nav className={headerNavigation}>\n        <ul className={headerNavigationList}>\n          <li className={headerNavigationItem}>\n            <Link to=\"/tags\">\n              <span\n                aria-label=\"tags\"\n                className={clsx(headerNavigationItemLink, tags)}\n              />\n            </Link>\n          </li>\n          <li className={headerNavigationItem}>\n            <a href=\"/about\" rel=\"noopener\" target=\"_blank\">\n              <span\n                aria-label=\"about\"\n                className={clsx(headerNavigationItemLink, about)}\n              />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport { Header };\n","// extracted by mini-css-extract-plugin\nexport var footerRoot = \"footer-module--footer-root--795ff\";","import { footerRoot } from './footer.module.css';\n\nfunction Footer() {\n  return (\n    <footer className={footerRoot}>\n      <span>Powered by Gatsby, Hosted by GitHub Pages.</span>\n      <span>\n        ©\n        <a\n          href=\"https://github.com/partykyoung\"\n          rel=\"noreferrer\"\n          target=\"_blank\">\n          KyoungAh\n        </a>\n        , All rights reserved.\n      </span>\n    </footer>\n  );\n}\n\nexport { Footer };\n","import type { PropsWithChildren } from \"react\";\n\nimport { Header } from \"../header\";\nimport { Footer } from \"../footer\";\nimport { BasicLayout } from \"../basic-layout\";\n\nfunction DefaultLayout({ children }: PropsWithChildren) {\n  return (\n    <>\n      <Header />\n      <BasicLayout>{children}</BasicLayout>\n      <Footer />\n    </>\n  );\n}\n\nexport { DefaultLayout };\n","// extracted by mini-css-extract-plugin\nexport var postLayoutContainer = \"post-layout-module--post-layout-container--f40b5\";\nexport var postLayoutTitle = \"post-layout-module--post-layout-title--1c575\";","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","h3","h4","a","ol","li","ul","_provideComponents","components","React","href","wrapper","MDXLayout","PostLayout","_ref","_data$mdx$frontmatter","_data$mdx","data","children","date","tags","title","mdx","frontmatter","_jsx","DefaultLayout","_jsxs","Container","className","postLayoutContainer","PostLayoutTitle","postLayoutTitle","PostLayoutDate","PostLayoutTags","PostLayoutContent","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","postLayoutContentRoot","clsx","postLayoutDateRoot","postLayoutTags","Tags","map","tag","Link","to","Tag","postLayoutTitleRoot","ComposedTags","containerRoot","basicLayoutRoot","BasicLayout","about","headerLogo","headerNavigation","headerNavigationItem","headerNavigationItemLink","headerNavigationList","headerRoot","Header","src","srcSet","sizes","alt","rel","target","footerRoot","Footer","_Fragment","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value","r","e","t","f","n","Array","isArray","o","length","arguments"],"sourceRoot":""}